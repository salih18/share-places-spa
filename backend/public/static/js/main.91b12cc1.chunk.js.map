{"version":3,"sources":["shared/context/auth-context.js","shared/component/UIElements/LoadingSpinner.js","shared/component/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/component/Navigation/MainHeader.js","shared/component/Navigation/SideDrawer.js","shared/component/Navigation/NavLinks.js","shared/component/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","NavLinks","auth","useContext","to","exact","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.91b12cc1.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useEffect, useCallback } from \"react\";\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\n\nimport \"./MainHeader.css\";\n\nconst MainHeader = props => {\n  return <header className='main-header'>{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"drawer-hooks\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className='nav-links'>\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/auth'>AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport MainHeader from \"./MainHeader\";\nimport SideDrawer from \"./SideDrawer\";\nimport NavLinks from \"./NavLinks\";\nimport Backdrop from \"../UIElements/Backdrop\";\nimport \"./MainNavigation.css\";\n\nconst MainNavigation = props => {\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n  const openDrawerHandler = () => {\n    setDrawerIsOpen(true);\n  };\n  const closeDrawerHandler = () => {\n    setDrawerIsOpen(false);\n  };\n  return (\n    <Fragment>\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\n\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\n        <nav className='main-navigation__drawer-nav'>\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n\n      <MainHeader>\n        <button\n          className='main-navigation__menu-btn'\n          onClick={openDrawerHandler}\n        >\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className='main-navigation__title'>\n          <Link to='/'>Your Places</Link>\n        </h1>\n        <nav className='main-navigation__header-nav'>\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport MainNavigation from \"./shared/component/Navigation/MainNavigation\";\n// import Users from \"./users/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./users/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/component/UIElements/LoadingSpinner\";\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/places/new' exact>\n          <NewPlace />\n        </Route>\n        <Route path='/places/:placeId/'>\n          <UpdatePlace />\n        </Route>\n        <Redirect to='/' />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path='/' exact>\n          <Users />\n        </Route>\n        <Route path='/:userId/places' exact>\n          <UserPlaces />\n        </Route>\n        <Route path='/auth'>\n          <Auth />\n        </Route>\n        <Redirect to='/auth' />\n      </Switch>\n    );\n  }\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token,\n        login,\n        logout,\n        userId\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className='center'>\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}