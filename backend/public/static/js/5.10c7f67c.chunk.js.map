{"version":3,"sources":["shared/component/formElements/Button.js","shared/component/UIElements/Card.js","shared/component/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/component/UIElements/Modal.js","shared/component/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","ErrorModal","error","onClear","onCancel","header","show","footer","useHttpClient","useState","isLoading","setIsLoading","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrll","AbortController","current","push","fetch","signal","res","json","data","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","Map","map","setMap","mapContainer","center","zoom","mapboxgl","accessToken","container","on","resize","initializeMap","ref","el","PlaceItem","place","onDeletePlace","auth","useContext","AuthContext","showMap","setShowMap","showConfirmModal","setShowConfirmModal","closeMapHandler","id","image","name","title","address","description","location","cancelDeleteHandler","confirmDeleteHandler","process","Authorization","token","LoadingSpinner","asOverlay","src","alt","creator","userId","PlaceList","items","length","key","UserPlaces","places","setPlaces","useParams","userWithPlaces","getPlaces","detetedPlaceId","prevPlaces"],"mappings":"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","file":"static/js/5.10c7f67c.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../formElements/Button\";\n\nconst ErrorModal = ({ error, onClear }) => {\n  return (\n    <Modal\n      onCancel={onClear}\n      header='An Error Occurred!'\n      show={!!error}\n      footer={<Button onClick={onClear}>Okay</Button>}\n    >\n      <p>{error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\nconst useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrll = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrll);\r\n      try {\r\n        const res = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrll.signal\r\n        });\r\n        const data = await res.json();\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrll\r\n        );\r\n        if (!res.ok) {\r\n          throw new Error(data.message);\r\n        }\r\n        setIsLoading(false);\r\n        return data;\r\n      } catch (error) {\r\n        setError(error.message || \"Somthing went wrong, pleace try again.\");\r\n        setIsLoading(false);\r\n        throw error;\r\n      }\r\n    },\r\n    []\r\n  );\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\nexport default useHttpClient;\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","// import React, { useRef, useEffect } from \"react\";\r\n// import mapboxgl from \"mapbox-gl\";\r\n// mapboxgl.accessToken =\r\n//   \"pk.eyJ1IjoiYWxpa2FkaGltIiwiYSI6ImNqenZ0bDFzdzBhdGozbnBrMDFleDZ3dHQifQ.ak4IhXE5LXp1b3ofQC5l_Q\";\r\n\r\n// const Map = props => {\r\n//   const mapRef = useRef();\r\n\r\n//   const { center, zoom } = props;\r\n//   console.log(mapboxgl);\r\n//   useEffect(() => {\r\n//     const map = new window.mapboxgl.Map({\r\n//       container: mapRef.current,\r\n//       center: center,\r\n//       style: \"mapbox://styles/mapbox/streets-v11\",\r\n//       zoom: zoom\r\n//     });\r\n\r\n//     new window.mapboxgl.Marker({ position: center, map: map });\r\n//   }, [center, zoom]);\r\n\r\n//   return (\r\n//     <div\r\n//       ref={mapRef}\r\n//       className={`map ${props.className}`}\r\n//       style={props.style}\r\n//     ></div>\r\n//   );\r\n// };\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport \"./Map.css\";\r\nimport \"mapbox-gl/dist/mapbox-gl.css\";\r\n\r\nconst Map = props => {\r\n  const [map, setMap] = useState(null);\r\n  const mapContainer = useRef(null);\r\n  const { center, zoom } = props;\r\n\r\n  useEffect(() => {\r\n    mapboxgl.accessToken =\r\n      \"pk.eyJ1IjoiYWxpa2FkaGltIiwiYSI6ImNrNnVqZmY2YTA1bnQzZW9hOGl5c3owd3gifQ.0nam2ATvhX9r9KW4G36mSg\";\r\n    const initializeMap = ({ setMap, mapContainer }) => {\r\n      const map = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/streets-v11\",\r\n        center: center,\r\n        zoom: zoom\r\n      });\r\n\r\n      map.on(\"load\", () => {\r\n        setMap(map);\r\n        map.resize();\r\n      });\r\n    };\r\n\r\n    if (!map) initializeMap({ setMap, mapContainer });\r\n  }, [map, center, zoom]);\r\n\r\n  return (\r\n    <div\r\n      className={`map ${props.className}`}\r\n      ref={el => (mapContainer.current = el)}\r\n      style={props.style}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","import React, { useState, Fragment, useContext } from \"react\";\r\nimport \"./PlaceItem.css\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Modal from \"../../shared/component/UIElements/Modal\";\r\nimport Map from \"../../shared/component/UIElements/Map\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nconst PlaceItem = ({ place, onDeletePlace }) => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const [showMap, setShowMap] = useState(false);\r\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\r\n  const openMapHandler = () => setShowMap(true);\r\n  const closeMapHandler = () => setShowMap(false);\r\n  const { id, image, name, title, address, description, location } = place;\r\n\r\n  const showDeleteWaringHandler = () => {\r\n    setShowConfirmModal(true);\r\n  };\r\n  const cancelDeleteHandler = () => {\r\n    setShowConfirmModal(false);\r\n  };\r\n  const confirmDeleteHandler = async () => {\r\n    setShowConfirmModal(false);\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token\r\n        }\r\n      );\r\n      onDeletePlace(id);\r\n    } catch (error) {}\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={showMap}\r\n        onCancel={closeMapHandler}\r\n        header={address}\r\n        contentClass='place-item__modal-content'\r\n        footerClass='place-item__actions'\r\n        footer={<Button onClick={closeMapHandler}>Close</Button>}\r\n      >\r\n        <div className='map-container'>\r\n          <h1>THE MAP!</h1>\r\n          <Map center={location} zoom={16} />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={showConfirmModal}\r\n        onCancel={cancelDeleteHandler}\r\n        header='Are you sure?'\r\n        className='place-item__modal-actions'\r\n        footer={\r\n          <Fragment>\r\n            <Button inverse onClick={cancelDeleteHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </Fragment>\r\n        }\r\n      >\r\n        <p>\r\n          Do you want to proceed and delete this place? note that it can't be\r\n          undone thereafter.\r\n        </p>\r\n      </Modal>\r\n      <li className='place-item'>\r\n        <Card className='place-item__content'>\r\n          {isLoading && <LoadingSpinner asOverlay />}\r\n          <div className='place-item__image'>\r\n            <img\r\n              src={`${process.env.REACT_APP_ASSET_URL}/${image}`}\r\n              alt={name}\r\n            />\r\n          </div>\r\n          <div className='place-item__info'>\r\n            <h2>{title}</h2>\r\n            <h3>{address}</h3>\r\n            <p>{description}</p>\r\n          </div>\r\n          <div className='place-item__actions'>\r\n            <Button inverse onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {place.creator === auth.userId && (\r\n              <Button to={`/places/${id}`}>EDIT</Button>\r\n            )}\r\n            {place.creator === auth.userId && (\r\n              <Button danger onClick={showDeleteWaringHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default PlaceItem;\r\n","import React from \"react\";\r\n\r\nimport \"./PlaceList.css\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport PlaceItem from \"./PlaceItem\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nconst PlaceList = ({ items, onDeletePlace }) => {\r\n  if (items.length === 0) {\r\n    return (\r\n      <div className='place-list center'>\r\n        <Card>\r\n          <h2>No places found mybe create one ?</h2>\r\n          <Button to='/places/new'>Share place</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className='place-list'>\r\n      {items.map(place => (\r\n        <PlaceItem key={place.id} place={place} onDeletePlace={onDeletePlace} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default PlaceList;\r\n","import React, { Fragment, useState, useEffect } from \"react\";\r\nimport PlaceList from \"../components/PlaceList\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\n\r\nconst UserPlaces = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [places, setPlaces] = useState();\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const getPlaces = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/user/${userId}`\r\n        );\r\n        setPlaces(data.userWithPlaces);\r\n      } catch (error) {}\r\n    };\r\n    getPlaces();\r\n  }, [sendRequest, userId]);\r\n  const placeDeleteHandler = detetedPlaceId => {\r\n    setPlaces(prevPlaces =>\r\n      prevPlaces.filter(places => places.id !== detetedPlaceId)\r\n    );\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          {\" \"}\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && places && (\r\n        <PlaceList items={places} onDeletePlace={placeDeleteHandler} />\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UserPlaces;\r\n"],"sourceRoot":""}